{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","handleSelect","good","setState","handleClearAll","handleClear","filter","item","className","this","length","map","type","onClick","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,aAAe,SAACC,GACd,EAAKC,UAAS,gBAAGH,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBE,S,EAItCE,eAAiB,WACf,EAAKD,SAAS,CAAEH,cAAe,M,EAGjCK,YAAc,SAACH,GACb,EAAKC,UAAS,kBAAwB,CACpCH,cADY,EAAGA,cACcM,QAAO,SAAAC,GAAI,OACtCA,IAASL,U,4CAIf,WAAU,IAAD,OACP,OACE,sBAAKM,UAAU,MAAf,UACGC,KAAKV,MAAMC,cAAcU,OAAS,EACjC,qBAAIF,UAAU,cAAd,UACGC,KAAKV,MAAMC,cAAcW,KAAI,SAAAT,GAAI,OAChC,uBAAiBM,UAAU,mBAA3B,UACGN,EACD,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKR,YAAYH,IAEnBM,UAAU,qBALZ,iBAFSN,MAaZ,IAfH,iBAmBA,oBAAIM,UAAU,cAAd,gCAGDC,KAAKV,MAAMC,cAAcU,OAAS,GACjC,qBAAKF,UAAU,cAAf,SACE,wBACEI,KAAK,SACLC,QAASJ,KAAKL,eACdI,UAAU,yBAHZ,yBAUJ,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,cAAd,SACGX,EAAgBc,KAAI,SAAAT,GAAI,OACvB,qBAAeM,UAAU,mBAAzB,UACE,mBAAGA,UAAU,wBAAb,SACGN,KAED,EAAKH,MAAMC,cAAcc,SAASZ,IAClC,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKZ,aAAaC,IAEpBM,UAAU,qBALZ,sBALKN,iB,GA/DLa,IAAMC,WAuFTlB,ICxGfmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.01809c55.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  handleSelect = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  };\n\n  handleClearAll = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  handleClear = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(item => (\n        item !== good)),\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.selectedGoods.length > 0 ? (\n          <h1 className=\"page__title\">\n            {this.state.selectedGoods.map(good => (\n              <span key={good} className=\"page__title-item\">\n                {good}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleClear(good);\n                  }}\n                  className=\"page-button__clear\"\n                >\n                  X\n                </button>\n              </span>\n            ))}\n            {' '}\n            is selected\n          </h1>\n        ) : (\n          <h1 className=\"page__title\">No goods selected </h1>\n        )}\n\n        {this.state.selectedGoods.length > 1 && (\n          <div className=\"page-button\">\n            <button\n              type=\"button\"\n              onClick={this.handleClearAll}\n              className=\"page-button__clear-all\"\n            >\n              Clear All\n            </button>\n          </div>\n        )}\n\n        <div className=\"goods\">\n          <ul className=\"goods__list\">\n            {goodsFromServer.map(good => (\n              <li key={good} className=\"goods__list-item\">\n                <p className=\"goods__list-item-text\">\n                  {good}\n                </p>\n                {!this.state.selectedGoods.includes(good) && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.handleSelect(good);\n                    }}\n                    className=\"goods__list-button\"\n                  >\n                    Select\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}